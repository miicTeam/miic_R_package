% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tmiic.plot.R
\name{tmiic.getIgraph}
\alias{tmiic.getIgraph}
\title{Igraph plotting function for tmiic (temporal mode of miic)}
\usage{
tmiic.getIgraph(
  tmiic.res,
  display = "compact",
  show_self_loops = TRUE,
  pcor_palette = NULL
)
}
\arguments{
\item{tmiic.res}{[a tmiic graph object]
The graph object returned by the \code{\link{miic}} execution in temporal mode}

\item{display}{[a string]. Optional, default value "compact".
Possible values are \emph{"raw"}, \emph{"lagged"}, \emph{"compact"},
\emph{"combine"}, \emph{"unique"}, \emph{"drop"}:
\itemize{
\item When \emph{display} = \emph{"raw"}, the function will
  use the tmiic graph object as it, leading to the return of a lagged
  graph.
\item When \emph{display} = \emph{"lagged"}, the function will
  repeat the edges over history assuming stationarity and return a lagged
  graph.
\item When \emph{display} = \emph{"compact"}, the default, nodes
  and edges are converted into a flattened version to produce a compact
  view of the temporal network whilst still presenting all the information.\cr
  i.e.: X_lag1->Y_lag0, X_lag0<-Y_lag2 become respectively X->Y lag=1,
  X<-Y lag=2.
\item When \emph{display} = \emph{"combine"},
  a preprocessing will be applied to kept only one edge
  per couple of nodes. The info_shifted will be the highest one
  of the summarized edges whilst the lag and orientation of the
  summarized edge will be an aggregation.\cr
  i.e.: X_lag2->Y_lag0, X_lag0<-Y_lag1 will become X<->Y lag=1,2 with
  the info_shifted of X_lag2->Y_lag0 if info_shifted of
  X_lag2->Y_lag0 > X_lag0<-Y_lag1.
\item When \emph{display} = \emph{"unique"},
  a preprocessing will be applied to kept only the edges having the
  highest info_shifted for a couple of nodes.
  If several edges between the sames nodes have the same
  info_shifted, then the edge kept is the one with the minimum lag.\cr
  i.e.: X_lag1->Y_lag0, X_lag0<-Y_lag2 with info_shifted of
  X_lag1->Y_lag0 > X_lag0<-Y_lag2 become X->Y lag=1.
\item When \emph{display} = \emph{"drop"}, prior to the plotting,
  a preprocessing will be applied to kept only the edges having the
  highest info_shifted for a couple of nodes.
  If several edges between the sames nodes have the same
  info_shifted, then the edge kept is the one with the minimum lag.\cr
  i.e. :  X_lag1->Y_lag0, X_lag0<-Y_lag2 with info_shifted of
  X_lag1->Y_lag0 > X_lag0<-Y_lag2 become X->Y.
  The lag information is dropped during the preprocessing.
}}

\item{show_self_loops}{[a boolean] Optional, TRUE by default.
When TRUE, the edges like X_lag0-X_lag1 are included in the iGraph object.
When FALSE, only edges having different nodes are present in the iGraph
object.}

\item{pcor_palette}{Optional. The color palette used to represent the partial
correlations (the color of the edges). See \code{\link{getIgraph}} for details.}
}
\value{
An igraph graph object.
}
\description{
This functions returns an igraph object built from the result
returned by:
\code{\link{miic}} executed in temporal temporal mode.
\code{\link{tmiic.flatten_network}}
}
\details{
Edges attributes are passed to the igraph graph and can be accessed with
e.g. \code{E(g)$partial_correlation}. See \code{\link{miic}} for more
details on edge parameters. By default, edges are colored according to the
partial correlation between two nodes conditioned on the conditioning set
(negative is blue, null is gray and positive is red) and their width is
based on the conditional mutual information minus the complexity cost.
}
\seealso{
\code{\link{miic}} for details on edge parameters in the returned object,
\code{\link[igraph]{igraph.plotting}} for the detailed description of the
plotting parameters and \code{\link[igraph]{layout}} for different layouts.
}
