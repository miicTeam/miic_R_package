% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tmiic.wrapper.R
\name{tmiic.flatten_network}
\alias{tmiic.flatten_network}
\title{tmiic.flatten_network}
\usage{
tmiic.flatten_network(
  miic_return,
  flatten_mode = "normal",
  keep_edges_on_same_node = TRUE
)
}
\arguments{
\item{miic_return}{[a list] The value returned by miic. (a list which
contains the different data frames resulting of miic's execution)}

\item{flatten_mode}{[a string]. Optional, default value "normal".
Possible values are \emph{"normal"}, \emph{"unique"}, \emph{"drop"}:
\itemize{
\item When \emph{flatten_mode} = \emph{"normal"}, the default, edges are simply 
  converted into a flattened version.\cr
  i.e.:  X_lag0-Y_lag1, X_lag0-Y_lag2 become respectively X-Y lag=1, 
  X-Y lag=2 (lag is a new column added in the dataframe) 
\item When \emph{flatten_mode} = \emph{"unique"}, only the edges having the highest 
  log_confidence for a couple of nodes are kept in the flattened network.\cr 
  i.e.: X_lag0-Y_lag1, X_lag0-Y_lag2 with log_confidence of 
  X_lag0-Y_lag1 > X_lag0-Y_lag2 become X-Y lag=1  (lag is a new column 
  added in the dataframe) 
\item When \emph{flatten_mode} = \emph{"drop"}, only the edges having the highest 
  log_confidence for a couple of nodes are kept in the flattened network
  and no column for the lag value is added.\cr
  i.e. :  X_lag0-Y_lag1, X_lag0-Y_lag2 with log_confidence of 
  X_lag0-Y_lag1 > X_lag0-Y_lag2 become X-Y. The lag information is 
  "lost" after flattening
}}

\item{keep_edges_on_same_node}{[a boolean] Optional, TRUE by default.
When TRUE, the edges like X_lag0-X_lag1 are kept during flatenning
(it becomes an X-X edge). When FALSE, only edges having different nodes 
are kept in the flatten network.}
}
\value{
[a list] The returned list is the one received as input where
the adjacency and summary dataframes has beEn flattened.\cr
Note that the adjacency matrix does not contain any more the orientation
as this information make less sense after flattening. Orientations are 
replaced by lag(s) in the adjacency matrix.
}
\description{
Flattten the lagged network returned by tmiic
}
\details{
In temporal mode, the network returned by miic contains lagged nodes 
(X_lag0, X_lag1, ...) over tau timesteps. This function flatten the 
network depending of the \emph{flatten_mode} parameter.\cr
Note that only the adjMatrix and summary data frames are flatened.
}
