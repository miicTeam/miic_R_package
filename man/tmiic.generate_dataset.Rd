% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tmiic.datasets.R
\name{tmiic.generate_dataset}
\alias{tmiic.generate_dataset}
\title{tmiic.generate_dataset}
\usage{
tmiic.generate_dataset(
  true_edges,
  funct,
  list_nodes,
  n_timeseries,
  n_timesteps,
  seed = NULL
)
}
\arguments{
\item{true_edges}{[a dataframe] The true_edges dataframe must at least 
contains the columns orig, dest, lag and strengh. The orig and dest 
columns are the indexes of the edges's nodes. Lag is a postive or 0 integer.
Strengh is a real number positive or negative indicating the impact of the
orig node to the dest one.\cr
CAUTION: if a 0 lag is used, the order of the edges in the input dataframe
is important. The values of orig node(s) of the lag 0 edge must be completly
computed before the dest node of the lag 0 edge is computed.\cr
i.e. : if we have edges X3(t-1) -> X2(t) and X2(t) -> X1(t)
the edge X3(t-1) -> X2(t) must appear first in the true_edges parameter.}

\item{funct}{[a function] The function to apply when an edge exist between
two nodes}

\item{list_nodes}{[a list] The list of nodes in the dataset}

\item{n_timeseries}{[an integer] The number of time series to generate}

\item{n_timesteps}{[an integer] The number of timesteps of each time series 
generated}

\item{seed}{[an integer] Optional, NULL by default. The seed to use when 
generating the dataset}
}
\value{
a dataframe of \emph{n_timeseries} * \emph{n_timesteps} rows 
and \emph{n_nodes} columns
}
\description{
Generate \emph{n_timeseries} tile series for \emph{n_nodes} nodes over 
\emph{n_timesteps} timesteps
}
\details{
The function uses the \emph{funct} and the \emph{true_edges} parameters 
to generate temporal dataset.
 
i.e.: if in the true edges, the node1 is:
\itemize{
\item connected to itself at t-1 with strengh 0.5 
\item connected to the node2 at t-2 with strength 0.2
} 
the generation will compute for each timestep of node 1:\cr
node1(t) <- 0.5 * node1[t-1] + 0.2 * funct ( node2[t-2] ) + white noise\cr
(Note that funct is only applied when nodes are different)

Values of the first iterations are discarded, so the temporal data
generated are not affected by the initial values.
}
