% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tmiic.plot.R
\name{tmiic.export}
\alias{tmiic.export}
\title{Export temporal miic (tmiic) result to different plotting methods}
\usage{
tmiic.export(tmiic.res, method = "igraph")
}
\arguments{
\item{tmiic.res}{[a tmiic graph object]
The graph object returned by the miic execution in temporal mode, 
eventually flattened.}

\item{method}{A string representing the plotting method.
Currently only "igraph" is supported.}
}
\value{
A graph object adapted to the method.
}
\description{
This function creates an object built from the result returned
by \code{\link{miic}} executed in temporal mode that is ready to be fed to 
different plotting methods.
}
\details{
See the details of specific function for each method.
For igraph, see \code{\link{tmiic.getIgraph}}.
}
\examples{
\donttest{
library(miic)
data(covidCases)
# execute MIIC (reconstruct graph in temporal mode)
tmiic.res <- miic(input_data = covidCases, tau = 2, movavg = 14)

# Plot temporal network Using igraph
if(require(igraph)) {
g = tmiic.export(tmiic.res, "igraph")
plot(g) # Default visualisation, calls igraph::plot.igraph()

# Specifying layout (see ?igraph::layout_)
l <- layout_on_grid(g, width = 5, height = 3, dim = 2)
plot(g, layout=l)

# Override some graphical parameters
plot(g, edge.arrow.size = 0.75)
plot(g, vertex.shape="none", edge.color="gray85", vertex.label.color="gray10")

# For compact graph, please be aware that the rendering of
# igraph::plot.igraph() is not optimal when the graph contains
# multiple edges between the same nodes.
# So the recommend way to plot a compact graph is to use tmiic:  
flatten.res <- tmiic.flatten_network(tmiic.res)
plot(flatten.res)
}

}
}
\seealso{
\code{\link{tmiic.getIgraph}} for details on the igraph exported object.
}
